using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace HidRawTools
{
    public class IMatrix
    {
        public IMatrix() { }
        public int ROWS;
        public int COLS;
        public byte[] rowPins;
        public byte[] colPins;
        public string[,] hexaKeys0 = new string[5, 14];
        public string[,] hexaKeys1 = new string[5, 14];
        public byte[,] keymask = new byte[5, 14];
        public double[,] keycap;
        public string Name = "unamed";
        public string[] keycode;
        public string[] Defaultkeycode;
    }
    class XD60_A : IMatrix
    {
        public XD60_A()
        {
            this.Name = "XD60_A";
            this.ROWS = 5;
            this.COLS = 14;
            this.rowPins = new byte[5] { 5, 6, 7, 8, 23 };
            this.colPins = new byte[14] { 21, 20, 24, 10, 9, 15, 22, 1, 4, 14, 13, 12, 11, 3 };
            this.hexaKeys0 = new string[5, 14] {
    { "Esc","1","2","3","4","5","6","7","8","9","0","-","=","<--"},
    { "Tab","Q","W","E","R","T","Y","U","I","O","P","[","]","、"},
    { "CapsLK","A","S","D","F","G","H","J","K","L",";","“","0x00","Enter"},
    { "Shift","0x00","Z","X","C","V","B","N","M",",",".","0x00", "/","Up"},
    { "Ctrl","FN","Alt","0x00","0x00","Space","0x00","/","Left","0x00","FN","rCtrl","Down","Right"}
                };
            this.hexaKeys1 = new string[5, 14]{
    { "~","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12", "Delete"},
    { "Tab","p1","p2","p3","p4","p5","p6","p7","p8","p9","p0","p-","p+","、"},
    { "CapsLK", "mLeft","mMid","mRight","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","Enter"},
    { "Shift","0x00","NumLK","ScrLk","Insert","PrtSc","0x00","0x00","0x00","VOL-","VOL+","0x00","0x00","Up"},
    { "Ctrl","FN","Alt","0x00","0x00","Space","0x00","0x00","Left","0x00","FN","rCtrl","Down","Right"}
                };
            Defaultkeycode = new string[106];
          
             //x,y,length,row,col
             keycode = new string[106*2]; 
            for (int i = 0; i < keycode.Length; i++)
            {
                keycode[i] = ""; 
            }
            this.keycap = new double[106, 5] {
        {0,0,1,0,0 },
        {1,0,1,0,1 },
        {2,0,1,0,2 },
        {3,0,1,0,3 },
        {4,0,1,0,4 },
        {5,0,1,0,5 },
        {6,0,1,0,6 },
        {7,0,1,0,7 },
        {8,0,1,0,8 },
        {9,0,1,0,9 },
        {10,0,1,0,10 },
        {11,0,1,0,11 },
        {12,0,1,0,12 },
        {13,0,1,0,13 },
        {13,0,2,0,13 },
        {14,0,1,4,9 },
        {0,1,1.5,1,0 },
        {1.5,1,1,1,1 },
        {2.5,1,1,1,2 },
        {3.5,1,1,1,3 },
        {4.5,1,1,1,4 },
        {5.5,1,1,1,5 },
        {6.5,1,1,1,6 },
        {7.5,1,1,1,7 },
        {8.5,1,1,1,8 },
        {9.5,1,1,1,9 },
        {10.5,1,1,1,10 },
        {11.5,1,1,1,11 },
        {12.5,1,1,1,12 },
        {13.5,1,1.5,1,13 },
        {0,2,1.75,2,0 },
        {1.75,2,1,2,1 },
        {2.75,2,1,2,2 },
        {3.75,2,1,2,3 },
        {4.75,2,1,2,4 },
        {5.75,2,1,2,5 },
        {6.75,2,1,2,6 },
        {7.75,2,1,2,7 },
        {8.75,2,1,2,8 },
        {9.75,2,1,2,9 },
        {10.75,2,1,2,10 },
        {11.75,2,1,2,11 },
        {12.75,2,1,2,12 },
        {12.75,2,2.25,2,13 },
        {13.75,2,1.25,2,13 },
        {0,3,2.25,3,0 },
        {0,3,1.25,3,0 },
        {1.25,3,1,3,1 },
        {2.25,3,1,3,2 },
        {3.25,3,1,3,3 },
        {4.25,3,1,3,4 },
        {5.25,3,1,3,5 },
        {6.25,3,1,3,6 },
        {7.25,3,1,3,7 },
        {8.25,3,1,3,8 },
        {9.25,3,1,3,9 },
        {10.25,3,1,3,10 },
        {11.25,3,1,3,11 },
        {12.25,3,2.75,3,13 },
        {12.25,3,1.75,3,13 },
        {12.25,3,1,3,12 },
        {13.25,3,1.75,3,13 },
        {14,3,1,3,12 },
        {0,3,2,3,0 },
        {0,3,1,3,0 },
        {1,3,1,3,1 },
        {2,3,1,3,2 },
        {3,3,1,3,3 },
        {4,3,1,3,4 },
        {5,3,1,3,5 },
        {6,3,1,3,6 },
        {7,3,1,3,7 },
        {8,3,1,3,8 },
        {9,3,1,3,9 },
        {10,3,1,3,10 },
        {11,3,1,3,11 },
        {11.25,3,1.75,4,7 },
        {12,3,1,4,7 },
        {13,3,1,3,13 },
        {13,3,2,3,13 },
        {14,3,1,3,12 },
        {10,4,1,4,10 },
        {11,4,1,4,11 },
        {12,4,1,4,8 },
        {13,4,1,4,12 },
        {14,4,1,4,13 },
        {0,4,1.25,4,0 },
        {0,4,1.5,4,0 },
        {1.25,4,1.25,4,1 },
        {1.5,4,1.5,4,1 },
        {1.5,4,1,4,1 },
        {2.5,4,1.25,4,2 },
        {2.5,4,1.5,4,2 },
        {3.75,4,6.25,4,5 },
        {3,4,7,4,5 },
        {4,4,7,4,5 },
        {4,4,6,4,5 },
        {10,4,1.25,4,10 },
        {10,4,1.5,4,10 },
        {11.25,4,1.25,4,11 },
        {11.5,4,1,4,11 },
        {11,4,1.5,4,11 },
        {12.5,4,1.25,4,12 },
        {12.5,4,1,4,12 },
        {13.75,4,1.25,4,13 },
        {13.5,4,1.5,4,13 } };
        }
    }
}
