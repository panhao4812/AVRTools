using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace HidRawTools
{
    public class IMatrix
    {
        public string Debug_output="";
        public IMatrix() { }
        public int ROWS;
        public int COLS;
        public byte[] rowPins;
        public byte[] colPins;
        public string[,] hexaKeys0 = new string[5, 14];
        public string[,] hexaKeys1 = new string[5, 14];
        public byte[,] keymask = new byte[5, 14];
        public double[,] keycap;
        public string Name = "unamed";
        public string[] keycode;
        public string[] Defaultkeycode;
        public int[,] RGB = null;
        public ushort PrintFlashAddress = 0;
        public ushort PrintEEpAddress = 0;
        public ushort eepromsize = 0;
        public ushort flashsize = 0;
        /// ///////////////////////////////////////////////////
        public string[,] IhexaKeys0;
        public void IUpdateMatrix()
        {
            if (Defaultkeycode.Length < 1) return;
            for (int i = 0; i < Defaultkeycode.Length; i++)
            {
                string str = Defaultkeycode[i];
                string[] strs = str.Split(',');
                int index = Convert.ToInt32(strs[0]);
                bool sign = false;
                int ii, jj;
                for (ii = 0; ii < this.ROWS; ii++)
                {
                    for (jj = 0; jj < this.COLS; jj++)
                    {
                        if (strs[1] == IhexaKeys0[ii, jj])
                        {
                            keycap[index, 4] = jj; keycap[index, 3] = ii;
                            sign = true;
                        }
                        if (sign) break;
                    }
                    if (sign) break;
                }
            }
        }
    }
    class QMK60_ISO : IMatrix
    {
        public QMK60_ISO()
        {
            this.Name = "QMK60_ISO";
            iniLayout();
        }
        const int keynum = 61;
        public void iniLayout()
        {
            RGB = null;
            //rgb如果是轴灯，前两个坐标值给0,0，如果没有则写null
            keycode = new string[keynum * 2];
            for (int i = 0; i < keycode.Length; i++)
            {
                keycode[i] = "";
            }
            Defaultkeycode = new string[keynum];
            for (int i = 0; i < Defaultkeycode.Length; i++)
            {
                Defaultkeycode[i] = i.ToString();
            }
            this.keycap = new double[keynum, 5] {
{0,0,1,0,0},// 0
{1,0,1,0,1},// 1
{2,0,1,0,2},// 2
{3,0,1,0,3},// 3
{4,0,1,0,4},// 4
{5,0,1,0,5},// 5
{6,0,1,0,6},// 6
{7,0,1,0,7},// 7
{8,0,1,0,8},// 8
{9,0,1,0,9},// 9
{10,0,1,0,10},// 10
{11,0,1,0,11},// 11
{12,0,1,0,12},// 12
{13,0,2,0,13},// 13
{0,1,1.5,1,0},// 14
{1.5,1,1,1,1},// 15
{2.5,1,1,1,2},// 16
{3.5,1,1,1,3},// 17
{4.5,1,1,1,4},// 18
{5.5,1,1,1,5},// 19
{6.5,1,1,1,6},// 20
{7.5,1,1,1,7},// 21
{8.5,1,1,1,8},// 22
{9.5,1,1,1,9},// 23
{10.5,1,1,1,10},// 24
{11.5,1,1,1,11},// 25
{12.5,1,1,1,12},// 26
{13.5,1,1.5,1,13},// 27
{0,2,1.75,2,0},// 28
{1.75,2,1,2,1},// 29
{2.75,2,1,2,2},// 30
{3.75,2,1,2,3},// 31
{4.75,2,1,2,4},// 32
{5.75,2,1,2,5},// 33
{6.75,2,1,2,6},// 34
{7.75,2,1,2,7},// 35
{8.75,2,1,2,8},// 36
{9.75,2,1,2,9},// 37
{10.75,2,1,2,10},// 38
{11.75,2,1,2,11},// 39
{12.75,2,2.25,2,13},// 40
{0,3,2.25,3,0},// 41
{2.25,3,1,3,2},// 42
{3.25,3,1,3,3},// 43
{4.25,3,1,3,4},// 44
{5.25,3,1,3,5},// 45
{6.25,3,1,3,6},// 46
{7.25,3,1,3,7},// 47
{8.25,3,1,3,8},// 48
{9.25,3,1,3,9},// 49
{10.25,3,1,3,10},// 50
{11.25,3,1,3,11},// 51
{12.25,3,2.75,3,13},// 52
{0,4,1.25,4,0},// 53
{1.25,4,1.25,4,1},// 54
{2.5,4,1.25,4,2},// 55
{3.75,4,6.25,4,5},// 56
{10,4,1.25,4,10},// 57
{11.25,4,1.25,4,11},// 58
{12.5,4,1.25,4,12},// 59
{13.75,4,1.25,4,13}// 60
            };
        }
    }
    class QMK84_ISO : IMatrix
    {
        public QMK84_ISO()
        {
            this.Name = "QMK84_ISO";
            iniLayout();
        }
        const int keynum = 0;
        public void iniLayout()
        {
            RGB = null;
            keycode = new string[keynum * 2];
            for (int i = 0; i < keycode.Length; i++)
            {
                keycode[i] = "";
            }
            Defaultkeycode = new string[keynum];
            for (int i = 0; i < Defaultkeycode.Length; i++)
            {
                Defaultkeycode[i] = i.ToString();
            }
            this.keycap = new double[keynum, 5] {

            };
        }
    }
    class QMK96_ISO : IMatrix
    {
        public QMK96_ISO()
        {
            this.Name = "QMK96_ISO";
            iniLayout();
        }
        const int keynum = 100;
        public void iniLayout()
        {
            RGB = null;
            keycode = new string[keynum * 2];
            for (int i = 0; i < keycode.Length; i++)
            {
                keycode[i] = "";
            }
            Defaultkeycode = new string[keynum];
            for (int i = 0; i < Defaultkeycode.Length; i++)
            {
                Defaultkeycode[i] = i.ToString();
            }
            this.keycap = new double[keynum, 5] {
                {0,-1,1,5,0},// 0
{1,-1,1,5,2},// 1
{2,-1,1,5,3},// 2
{3,-1,1,5,4},// 3
{4,-1,1,5,5},// 4
{5,-1,1,6,0},// 5
{6,-1,1,6,10},// 6
{7,-1,1,7,10},// 7
{8,-1,1,7,0},// 8
{9,-1,1,5,11},// 9
{10,-1,1,5,12},// 10
{11,-1,1,5,13},// 11
{12,-1,1,5,14},// 12
{13,-1,1,1,13},// 13
{14,-1,1,2,14},// 14
{15,-1,1,0,13},// 15
{16,-1,1,7,6},// 16
{17,-1,1,7,9},// 17
{18,-1,1,7,8},// 18
{0,0,1,4,0},// 19
{1,0,1,4,1},// 20
{2,0,1,4,2},// 21
{3,0,1,4,3},// 22
{4,0,1,4,4},// 23
{5,0,1,4,5},// 24
{6,0,1,6,1},// 25
{7,0,1,6,11},// 26
{8,0,1,7,11},// 27
{9,0,1,7,1},// 28
{10,0,1,4,10},// 29
{11,0,1,4,11},// 30
{12,0,1,4,12},// 31
{13,0,2,4,14},// 32
{15,0,1,4,6},// 33
{16,0,1,4,7},// 34
{17,0,1,4,8},// 35
{18,0,1,4,9},// 36
{0,1,1.5,3,0},// 37
{1.5,1,1,3,1},// 38
{2.5,1,1,3,2},// 39
{3.5,1,1,3,3},// 40
{4.5,1,1,3,4},// 41
{5.5,1,1,3,5},// 42
{6.5,1,1,6,2},// 43
{7.5,1,1,6,12},// 44
{8.5,1,1,7,12},// 45
{9.5,1,1,7,2},// 46
{10.5,1,1,3,10},// 47
{11.5,1,1,3,11},// 48
{12.5,1,1,3,12},// 49
{13.5,1,1.5,3,13},// 50
{15,1,1,3,6},// 51
{16,1,1,3,7},// 52
{17,1,1,3,8},// 53
{18,1,0.5,2,9},// 54
{0,2,1.75,2,0},// 55
{1.75,2,1,2,1},// 56
{2.75,2,1,2,2},// 57
{3.75,2,1,2,3},// 58
{4.75,2,1,2,4},// 59
{5.75,2,1,2,5},// 60
{6.75,2,1,6,3},// 61
{7.75,2,1,6,13},// 62
{8.75,2,1,7,13},// 63
{9.75,2,1,7,3},// 64
{10.75,2,1,2,10},// 65
{11.75,2,1,2,11},// 66
{12.75,2,2.25,2,13},// 67
{15,2,1,2,6},// 68
{16,2,1,2,7},// 69
{17,2,1,2,8},// 70
{0,3,2.25,1,0},// 71
{2.25,3,1,1,1},// 72
{3.25,3,1,1,2},// 73
{4.25,3,1,1,3},// 74
{5.25,3,1,1,4},// 75
{6.25,3,1,1,5},// 76
{7.25,3,1,6,4},// 77
{8.25,3,1,6,14},// 78
{9.25,3,1,7,14},// 79
{10.25,3,1,7,4},// 80
{11.25,3,1,1,10},// 81
{12.25,3,1.75,1,11},// 82
{14,3,1,6,8},// 83
{15,3,1,1,6},// 84
{16,3,1,1,7},// 85
{17,3,1,1,8},// 86
{18,3,0.5,0,9},// 87
{0,4,1.25,0,0},// 88
{1.25,4,1.25,0,1},// 89
{2.5,4,1.25,0,2},// 90
{3.75,4,6.25,6,5},// 91
{10,4,1,7,5},// 92
{11,4,1,0,11},// 93
{12,4,1,0,11},// 
{13,4,1,6,6},// 
{14,4,1,6,7},// 
{15,4,1,6,9},// 
{16,4,1,0,6},// 
{17,4,1,0,8},// 
            };
        }
    }
    class QMK60_2Shift : IMatrix
    {
        public QMK60_2Shift()
        {
            this.Name = "QMK60_2Shift";
            iniLayout();
        }
        public const int keynum = 64;
        public void iniLayout()
        {
            RGB = null;
            keycode = new string[keynum * 2];
            for (int i = 0; i < keycode.Length; i++)
            {
                keycode[i] = "";
            }
            Defaultkeycode = new string[keynum];
            for (int i = 0; i < Defaultkeycode.Length; i++)
            {
                Defaultkeycode[i] = i.ToString();
            }
            this.keycap = new double[keynum, 5] {
                {0,0,1,0,0},// 0
{1,0,1,0,1},// 1
{2,0,1,0,2},// 2
{3,0,1,0,3},// 3
{4,0,1,0,4},// 4
{5,0,1,0,5},// 5
{6,0,1,0,6},// 6
{7,0,1,0,7},// 7
{8,0,1,0,8},// 8
{9,0,1,0,9},// 9
{10,0,1,0,10},// 10
{11,0,1,0,11},// 11
{12,0,1,0,12},// 12
{13,0,2,0,14},// 13
{0,1,1.5,1,0},// 14
{1.5,1,1,1,1},// 15
{2.5,1,1,1,2},// 16
{3.5,1,1,1,3},// 17
{4.5,1,1,1,4},// 18
{5.5,1,1,1,5},// 19
{6.5,1,1,1,6},// 20
{7.5,1,1,1,7},// 21
{8.5,1,1,1,8},// 22
{9.5,1,1,1,9},// 23
{10.5,1,1,1,10},// 24
{11.5,1,1,1,11},// 25
{12.5,1,1,1,12},// 26
{13.5,1,1.5,1,13},// 27
{0,2,1.75,2,0},// 28
{1.75,2,1,2,1},// 29
{2.75,2,1,2,2},// 30
{3.75,2,1,2,3},// 31
{4.75,2,1,2,4},// 32
{5.75,2,1,2,5},// 33
{6.75,2,1,2,6},// 34
{7.75,2,1,2,7},// 35
{8.75,2,1,2,8},// 36
{9.75,2,1,2,9},// 37
{10.75,2,1,2,10},// 38
{11.75,2,1,2,11},// 39
{12.75,2,2.25,2,13},// 40
{0,3,2,3,0},// 41
{2,3,1,3,2},// 42
{3,3,1,3,3},// 43
{4,3,1,3,4},// 44
{5,3,1,3,5},// 45
{6,3,1,3,6},// 46
{7,3,1,3,7},// 47
{8,3,1,3,8},// 48
{9,3,1,3,9},// 49
{10,3,1,3,10},// 50
{11,3,1,3,11},// 51
{12,3,1,3,12},// 52
{13,3,1,3,13},// 53
{14,3,1,3,14},// 54
{0,4,1.25,4,0},// 55
{1.25,4,1.25,4,1},// 56
{2.5,4,1.25,4,2},// 57
{3.75,4,6.25,4,7},// 58
{10,4,1,4,9},// 59
{11,4,1,4,10},// 60
{12,4,1,4,11},// 61
{13,4,1,4,12},// 62
{14,4,1,4,13}// 63
            };
        }
    }
    class QMK60_175Shift : IMatrix
    {
        public QMK60_175Shift()
        {
            this.Name = "QMK60_175Shift";
            iniLayout();
        }
        const int keynum = 63;
        public void iniLayout()
        {
            RGB = null;
            keycode = new string[keynum * 2];
            for (int i = 0; i < keycode.Length; i++)
            {
                keycode[i] = "";
            }
            Defaultkeycode = new string[keynum];
            for (int i = 0; i < Defaultkeycode.Length; i++)
            {
                Defaultkeycode[i] = i.ToString();
            }
            this.keycap = new double[keynum, 5] {
        {0,0,1,0,0},// 0
{1,0,1,0,1},// 1
{2,0,1,0,2},// 2
{3,0,1,0,3},// 3
{4,0,1,0,4},// 4
{5,0,1,0,5},// 5
{6,0,1,0,6},// 6
{7,0,1,0,7},// 7
{8,0,1,0,8},// 8
{9,0,1,0,9},// 9
{10,0,1,0,10},// 10
{11,0,1,0,11},// 11
{12,0,1,0,12},// 12
{13,0,2,0,13},// 13
{0,1,1.5,1,0},// 14
{1.5,1,1,1,1},// 15
{2.5,1,1,1,2},// 16
{3.5,1,1,1,3},// 17
{4.5,1,1,1,4},// 18
{5.5,1,1,1,5},// 19
{6.5,1,1,1,6},// 20
{7.5,1,1,1,7},// 21
{8.5,1,1,1,8},// 22
{9.5,1,1,1,9},// 23
{10.5,1,1,1,10},// 24
{11.5,1,1,1,11},// 25
{12.5,1,1,1,12},// 26
{13.5,1,1.5,1,13},// 27
{0,2,1.75,2,0},// 28
{1.75,2,1,2,1},// 29
{2.75,2,1,2,2},// 30
{3.75,2,1,2,3},// 31
{4.75,2,1,2,4},// 32
{5.75,2,1,2,5},// 33
{6.75,2,1,2,6},// 34
{7.75,2,1,2,7},// 35
{8.75,2,1,2,8},// 36
{9.75,2,1,2,9},// 37
{10.75,2,1,2,10},// 38
{11.75,2,1,2,11},// 39
{12.75,2,2.25,2,13},// 40
{0,3,2.25,3,0},// 41
{2.25,3,1,3,2},// 42
{3.25,3,1,3,3},// 43
{4.25,3,1,3,4},// 44
{5.25,3,1,3,5},// 45
{6.25,3,1,3,6},// 46
{7.25,3,1,3,7},// 47
{8.25,3,1,3,8},// 48
{9.25,3,1,3,9},// 49
{10.25,3,1,3,10},// 50
{14,3,1,3,12},// 51
{11.25,3,1.75,4,7},// 52
{13,3,1,3,13},// 53
{10,4,1,4,10},// 54
{11,4,1,4,11},// 55
{12,4,1,4,8},// 56
{13,4,1,4,12},// 57
{14,4,1,4,13},// 58
{0,4,1.25,4,0},// 59
{1.25,4,1.25,4,1},// 60
{2.5,4,1.25,4,2},// 61
{3.75,4,6.25,4,5}//62
            };
        }
    }
    class QMK68_ISO : IMatrix
    {
        public QMK68_ISO()
        {
            this.Name = "QMK68_ISO";
            iniLayout();
        }
        const int keynum = 0;
        public void iniLayout()
        {
            RGB = null;
            keycode = new string[keynum * 2];
            for (int i = 0; i < keycode.Length; i++)
            {
                keycode[i] = "";
            }
            Defaultkeycode = new string[keynum];
            for (int i = 0; i < Defaultkeycode.Length; i++)
            {
                Defaultkeycode[i] = i.ToString();
            }
            this.keycap = new double[keynum, 5] {

            };
        }
    }
    class QMK87_ISO : IMatrix
    {
        public QMK87_ISO()
        {
            this.Name = "QMK87_ISO";
            iniLayout();
        }
        const int keynum = 0;
        public void iniLayout()
        {
            RGB = null;
            keycode = new string[keynum * 2];
            for (int i = 0; i < keycode.Length; i++)
            {
                keycode[i] = "";
            }
            Defaultkeycode = new string[keynum];
            for (int i = 0; i < Defaultkeycode.Length; i++)
            {
                Defaultkeycode[i] = i.ToString();
            }
            this.keycap = new double[keynum, 5] {

            };
        }
    }
}
